#!/usr/bin/env zsh

__sm_variables_file_read()
{
  eval "$1=\"\$(cat \"\${2:-\$1}\")\""
}

__sm_variables_file_write()
{
  eval "echo \"\$$1\"" > "${2:-$1}"
}

__sm_variables_file_read_one()
{
  typeset GREP_OPTIONS
  case "$(GREP_OPTIONS="" \grep -o "^$2=.*$" < "$1")" in
    ($2=\(*\))
      eval "${2//-/_}=( \$(sed '/^$2=/! d; s/^$2=(//; s/)$//' < \"\$1\") )"
      ;;
    ($2=\(*)
      eval "${2//-/_}=( \$(awk 'BEGIN {m=0} /^$2=/ {m=1; sub(/^$2=\(/,\"\");} /^\)/ {m=0;} m==1 {print;}' < \"\$1\") )"
      ;;
    ($2=*)
      eval "${2//-/_}=\"\$(sed '/^$2=/! d; s/^$2=//' < \"\$1\")\""
      ;;
  esac
}

__sm_variables_file_read_many()
{
  typeset __sm_variables_file
  __sm_variables_file="$1"
  shift

  for name
  do
    __sm_variables_file_read_one "${__sm_variables_file}" "$name"
  done
}

__sm_variables_file_read_all()
{
  typeset __sm_variables_file
  __sm_variables_file="$1"
  shift

  while read name
  do
    __sm_variables_file_read_one "${__sm_variables_file}" "$name"
  done \
    < <( awk -F= '{print $1}' < "${__sm_variables_file}" )
  # n+1 read is slow but it's the only safe one
}

__sm_variables_file_write_one()
{
  typeset GREP_OPTIONS
  if
    [[ -f "${1}" ]] && GREP_OPTIONS="" \grep "^$2=" < "$1" >/dev/null
  then
    if __sm.variable.is.array "${2//-/_}"
    then
      eval "sed -i '/^$2=/ s/^.*$/$2=( '\"\${${2//-/_}}\"' )/' \"\${1}\""
    else
      eval "sed -i '/^$2=/ s/^.*$/$2='\"\${${2//-/_}}\"'/' \"\${1}\""
    fi
  else
    if __sm.variable.is.array "${2//-/_}"
    then
      eval "printf \"$2=( \${${2//-/_}} )\"" > "${1}"
    else
      eval "printf \"$2=\${${2//-/_}}\"" > "${1}"
    fi
  fi
}

__sm_variables_file_write_many()
{
  typeset __sm_variables_file
  __sm_variables_file="$1"
  shift

  while
    (( $# ))
  do
    __sm_variables_file_write_one "${__sm_variables_file}" "$1"
    shift
  done
}
