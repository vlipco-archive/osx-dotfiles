#!/bin/sh

#
# SM Framework Core Module ~ Core (core)
#

__sm.exports()
{ # TODO: Filter this list of exports down.
  export sm_path __sm_modules_path action archives_path branch config_path database database_name debug_flag verbose_flag environment error_message extension extension_action extension_args extension_bin_path extension_config_path extension_modules_path extension_path extension_templates_path flags framework head_flag hooks_flag keep_releases old_releases parse_break paths previous_path project project_path release_path remote repository result revision shared_path src_path templates_path timestamp tmp_path trace_flag user extension_log_path packages_path
}

# Examples
#
#     user$ __sm.version
#     user$ echo $__sm_version
#     69.69.69
#
__sm.version()
{
  if [[ -s "$sm_path/VERSION" ]]
  then
    read -r __sm_version < "$sm_path/VERSION"
  else
    __sm_version="?.?.?"
  fi
}

# Examples
#
#     user$ cat $HOME/test
#     #!/bin/sm
#     NIY
#
#     user$ $HOME/test
#     ERROR: This feature has not yet been implemented.
#     Backtrace:
#        Trace   Line Function             File
#           3.    262 fail()               /sm/extensions/builtin/core/shell/logging/functions
#           2.      5 NIY()                /sm/extensions/builtin/core/shell/extensions/functions
#           1.      5 main()               /Users/sm/test
#      > modules/logging/functions fail() 263 $ exit 1
#
NIY()
{
  __sm.log.fail "This feature has not yet been implemented.\n$*"
}

if [[ -n "${BASH_VERSINFO}" ]] && (( ${BASH_VERSINFO[0]} > 3 ))
then # Allow for command_missing when a command is not found during lookup.
  command_not_found()
  {
    echo "bash: $1: command not found ($*)." >&2
    return 127
  }

  command_not_found_handle()
  {
    # do not run when inside Midnight Commander or within a Pipe
    if [[ -n "${MC_SID:-}" ]] || [[ ! -t 1 ]]
    then
      command_not_found "$@"
    fi

    if [[ $MACHTYPE = *linux* ]]
    then # do not run when within a subshell, Linux version.
      typeset cmd state remainder
      typeset -i pid ppid pgrp session tty_nr tpgid
      read pid cmd state ppid pgrp session tty_nr tpgid remainder \
        < /proc/self/stat

      if (( $$ == ${tpgid} ))
      then
        command_not_found "$@"
      fi
    fi

    # If a function named 'command_missing' is defined then call it with the
    # parameters of the unknown command and name otherwise call
    # 'command_not_found' for default behavior.
    if builtin command -v command_missing
    then
      command_missing "$@"
    else
      command_not_found "$@"
    fi
  }
fi

