#!/bin/sh

true \
  ${debug_flags:="-search"} ${debug_flag:=0} ${trace_flags:="-search -backtrace"} \
  ${trace_flag:=0} ${var_debug_type_flag:="long"} "${log_path:="${sm_path}/log"}"

typeset -a var_debug_flags

__sm_trace_filter_stack=()

__sm.set.ps4

set +o errexit     # Do not exit on error
trap 'exit 1' USR2 # Exit on USR2 (send by backtrace to $__sm_pid)
export __sm_pid=$$  # Store process pid for closing from backtrace

if [[ -n "${ZSH_VERSION}" ]] # Persist ERR handler
then set -e
else set -o errtrace
fi

# Call backtrace on error
trap "backtrace \"A command has returned error code '(\$?)' without being handled.\"" ERR

if [[ -n "${var_debug_flags[*]}" ]]
then
  __sm.debug.variables.callback.initialize
  trap __sm.debug.variables.callback DEBUG
fi

# Those two break error handling
#TODO: provide versions that do not break things ...
unset command_not_found
unset command_not_found_handle

#exec 1>&3        # log   output
#exec 2>&4        # debug output
#exec 3>&1        # log   output
#exec 4>&2        # debug output
#exec 5>&2        # error output
#exec 6>&2        # fail  output
#exec 7>/dev/null # commands stdout
#exec 8>&2        # commands stderr
